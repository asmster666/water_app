{"version":3,"sources":["components/pages/welcome.js","actions.js","components/pages/weight_name.js","components/main_field/main_field.js","components/main_field/index.js","components/ml_scroll/ml_scroll.js","components/ml_scroll/index.js","components/type_scroll/type_scroll.js","components/type_scroll/index.js","components/statistic/index.js","components/statistic/stat.js","components/pages/main.js","components/app/app.js","components/app/index.js","reducer.js","index.js"],"names":["WelcomePage","nextPage","props","history","push","className","id","onClick","this","Component","withRouter","get_weight_test","data","type","payload","get_activity_test","get_sex_test","get_cur_amount","get_type","get_cur_daily_amount","get_sum_daily_amount","get_cookie_data","WeightNamePage","state","name","sex","weight","activity","isSubmitted","warning","getName","document","getElementById","value","setState","getSexTest","radio1","male","radio2","female","checked","getWeightTest","querySelector","getActivityTest","eraseFunction","element","string","lastSymbol","charAt","length","slice","style","getCookie","cookies","set","path","goToNextPage","alert","maxLength","onChange","htmlFor","connect","cur_weight","cur_activity","cur_sex","actions","Main","sum","getAmount","result","get","Math","floor","getCookieData","item","console","log","getResult","amount","toFixed","parseInt","updateCurDaily","showCurDaily","isNaN","changeSum","daily","updateSum","cur_daily_amount","res","progressBarFunction","cookie_data","css_var","parsing","setProperty","procentProgressBar","procent","innerHTML","cur_amount","withCookies","sum_daily_amount","Mlscroll","arr","nextSlide","i","classList","contains","remove","add","prevSlide","generateSlides","wrapper","child","createElement","text","createTextNode","appendChild","getDaily","wrap","children","elem","textContent","newArray","Typescroll","array","counter","buildSlider","slider","append","addEventListener","addActive","checkOneActiveElemExist","kid","getCurType","slide","cur_type","Statistics","setDates","a","date","Date","month","getMonth","day","getDate","width","heignt","chartType","loader","options","vAxis","title","format","rootProps","MainPage","App","CookiesProvider","exact","component","render","initialState","reducer","action","newSum","store","createStore","ReactDOM"],"mappings":"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","file":"static/js/main.e1199e0f.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport './pages.css';\n\nclass WelcomePage extends Component {\n    \n    nextPage = () => {\n        this.props.history.push(\"/second\"); \n    }\n\n    render() {\n        return (\n            <div className=\"form form1\">\n                <div className=\"wrapper\">\n                    <div className=\"title\">Water App</div>\n                    <div id=\"glass\" className=\"glass\"></div>\n                </div>\n                <div className=\"wrap_welcome\">\n                    <button id=\"but\" className=\"start\" onClick={this.nextPage}>start</button>\n                    <div id=\"design\">designed by Infinity Web</div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(WelcomePage);","const get_weight_test = (data) => ({type: 'WEIGHT_TEST', payload: data});\nconst get_activity_test = (data) => ({type: 'ACTIVITY_TEST', payload: data});\nconst get_sex_test = (data) => ({type: 'SEX_TEST', payload: data});\nconst get_cur_amount = (data) => ({type: 'CUR_AMOUNT', payload: data});\nconst get_type = (data) => ({type: 'TYPE', payload: data});\nconst get_cur_daily_amount = (data) => ({type: 'CUR_DAILY_AMOUNT', payload: data});\nconst get_sum_daily_amount = (data) => ({type: 'SUM_DAILY_AMOUNT', payload: data});\nconst get_cookie_data = (data) => ({type: 'COOKIE_DATA', payload: data})\n\nexport {\n    get_weight_test,\n    get_activity_test,\n    get_sex_test,\n    get_cur_amount,\n    get_type,\n    get_cur_daily_amount,\n    get_sum_daily_amount,\n    get_cookie_data,\n};","import React, {Component} from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Cookies } from 'react-cookie';\nimport { instanceOf} from 'prop-types';\nimport {connect} from 'react-redux';\nimport * as actions from '../../actions';\n\nimport './pages.css';\n\nclass WeightNamePage extends Component {\n    // checking the type of data as element of class with warning\n    static propTypes = {\n        cookies: instanceOf(Cookies).isRequired\n    }\n    \n    state = {\n        name: \"\",\n        sex: \"\",\n        weight: 0,\n        activity: 0,\n        isSubmitted: true,\n        warning: false,\n    }\n\n    componentDidUpdate() {\n        // this.checkValidValue();\n    \n        this.eraseFunction();\n    }\n\n    getName = () => {\n        let name = document.getElementById(\"name\").value;\n        this.setState(() => ({\n            name\n        }))\n    }\n\n    getSexTest = () => {\n        const radio1 = document.getElementById(\"male\");\n        const male = radio1.value;\n        const radio2 = document.getElementById(\"female\");\n        const female = radio2.value;\n\n        if(radio1.checked) {\n            this.setState(() => ({\n                sex: male\n            }))\n            this.props.get_sex_test(male);\n        }\n        if(radio2.checked) {\n            this.setState(() => ({\n                sex: female\n            }))\n            this.props.get_sex_test(female);\n        }\n    }\n    \n    getWeightTest = () => {\n        let weight = document.querySelector(\"#weight\").value;\n\n        this.setState(() => ({\n            weight\n        }))\n\n        this.props.get_weight_test(weight);\n    }\n\n    getActivityTest = () => {\n        let activity = document.querySelector(\"#activity\").value;\n\n        this.setState(() => ({\n            activity\n        })) \n\n        this.props.get_activity_test(activity);\n    }\n\n    // checkValidValue = (elem) => {\n    //     let value = elem.value;\n    //     if(!isFinite(value)){\n    //         this.setState(() => ({\n    //             warning: true\n    //         }));\n    //         elem.style = \"background-color: red\"; \n    //     } \n    // }\n\n    eraseFunction = (element) => {\n        if(this.state.warning) {\n            let string = element.value,\n                lastSymbol = string.charAt(string.length - 1);\n            string.slice(lastSymbol, 0);\n            element.style =  \"background-color: white\"; \n        }\n    }\n\n    getCookie = (name, sex, weight, activity) => {\n        const { cookies } = this.props;\n\n        cookies.set('name', name, { path: '/' });\n        cookies.set('sex', sex, { path: '/' });\n        cookies.set('weight', weight, { path: '/' });\n        cookies.set('activity', activity, { path: '/' });\n\n        const next = document.querySelector(\".next\");\n        next.style = \"display: block\";\n        const submit = document.querySelector(\".submit\");\n        submit.style = \"display: none\";\n    }\n\n    nextPage = () => {\n        this.props.history.push(\"/main\");\n    }\n\n    goToNextPage = () => {\n        if(this.state.isSubmitted){\n            this.nextPage();\n        } else {\n            alert(\"Fill out your data\");\n        }\n    }\n\n    render() {\n        const {name, sex, weight, activity} = this.state;\n\n        return (\n            <div className=\"form form2\">\n                <div className=\"wrapper2\">\n                    <div id=\"field\">\n                        <div id=\"ques\">1) What's your name?</div>\n                        <input type=\"text\" maxLength=\"24\" id=\"name\" onChange={this.getName}/>\n                    </div>\n                    <div id=\"field\">\n                        <div id=\"ques\">2) What's your sex?</div>\n                        <form onChange={this.getSexTest}>\n                            <input type=\"radio\" id=\"male\" name=\"gender\" value=\"male\"/>\n                            <label htmlFor=\"male\">Male</label> \n                            <input type=\"radio\" id=\"female\" name=\"gender\" value=\"female\"/>\n                            <label htmlFor=\"female\">Female</label>\n                        </form>\n                    </div>\n                    <div id=\"field\">\n                        <div id=\"ques\">3) Your weight?</div>\n                        <input type=\"text\" maxLength=\"3\" id=\"weight\" onChange={this.getWeightTest}/>\n                    </div>\n                    <div id=\"field\">\n                        <div id=\"ques\">4) How long you do exercises per day?</div>\n                        <input type=\"text\" maxLength=\"3\" id=\"activity\" onChange={this.getActivityTest}></input>\n                    </div>\n                </div>\n                <div id=\"btn\">\n                    <button id=\"but\" className=\"submit\" onClick={()  => this.getCookie(name, sex, weight, activity)}>submit</button>\n                    <button id=\"but\" className=\"next\" onClick={this.goToNextPage}>next</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        cur_weight: state.weight,\n        cur_activity: state.activity,\n        cur_sex: state.sex\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, actions)(WeightNamePage));","import React,{Component} from \"react\";\nimport { withCookies, Cookies } from 'react-cookie';\nimport { instanceOf } from 'prop-types';\nimport {connect} from 'react-redux';\nimport * as actions from '../../actions';\n\nimport './main_field.css';\n\nclass Main extends Component {\n    // checking the type of data as element of class with warning\n    static propTypes = {\n        cookies: instanceOf(Cookies).isRequired\n    }\n\n    state = {\n        sum: 0\n    }\n\n    componentDidMount() {\n        this.getCookieData(this.getAmount());\n        //this.updateCurDaily(this.getResult(this.props.cur_amount, this.props.type));\n    }\n\n    componentDidUpdate() {\n        this.updateCurDaily(this.getResult(this.props.cur_amount, this.props.type));\n        this.updateSum();\n    }\n    \n    getAmount = () => {\n        const { cookies } = this.props;\n        let cur_sex = cookies.get('sex');\n        let cur_weight = cookies.get('weight');\n        let cur_activity = cookies.get('activity');\n        let result, data;\n\n        if(cur_sex === \"male\") {\n            result = cur_weight * 35; \n            if(cur_activity > 0) {\n                result += cur_activity * (34/3);\n            }\n            data = Math.floor(result); \n        }\n\n        if(cur_sex === \"female\") {\n            result = cur_weight * 31;\n            if(cur_activity > 0) {\n                result += cur_activity * (34/3); \n            }\n            data = Math.floor(result);\n        }\n\n        return data\n    }\n\n    getCookieData = (item) => {\n        this.props.get_cookie_data(item);\n        console.log(\"get_cookie_data\");\n    }\n\n    getResult = (amount, type) => {\n        let result;\n        if(type) {\n            switch (type) {\n                case \"water\":\n                    result = amount;\n                    break;\n                case \"milk\":\n                    result = (0.6 * amount).toFixed(2);\n                    break;\n                case \"yoghurt\":\n                    result = (0.7 * amount).toFixed(2);\n                    break;\n                case \"coffee\":\n                    result = (0.33 * amount).toFixed(2);\n                    break;\n                case \"alcohol\":\n                    result = (0.13 * amount).toFixed(2);\n                    break;\n                case \"tea\":\n                    result = (0.4 * amount).toFixed(2);\n                    break;\n                case \"juice\":\n                    result = (0.8 * amount).toFixed(2);\n                    break;\n                default: \n                    result = amount;\n                    break;\n            }\n        }\n\n        let data = parseInt(result);\n        return data;\n    }\n\n    updateCurDaily = (data) => {\n        this.props.get_cur_daily_amount(data);\n    }\n\n    showCurDaily = (sum) => {\n        if(isNaN(sum)) {\n            return 0;\n        } else {\n            return sum\n        }\n    }\n\n    changeSum = (daily) => {\n        if(daily !== 0) {\n            this.setState((state) => ({\n                sum: state.sum + daily\n            }))\n        } else {\n            console.log(\" nothing to change sum\");\n        }\n    }\n\n    updateSum = () => {\n        const {cur_daily_amount} = this.props;\n\n        if(cur_daily_amount !== null) {\n            let res = parseInt(cur_daily_amount);\n            this.props.get_sum_daily_amount(res);\n        }\n    }\n\n    progressBarFunction = (amount, cookie_data) => {\n        let css_var = document.querySelector(':root');\n\n        let parsing = parseInt(amount);\n\n        if(cookie_data > 0) {\n            let result = ((((parsing / cookie_data) * 100) * 25) / 100).toFixed(1);\n            css_var.style.setProperty('--length_of_bar', `${result}rem`);\n                \n            this.procentProgressBar(result);\n        }\n    }\n\n    procentProgressBar = (procent) => {\n        if(procent > 0) {\n            const text = document.querySelector(\"#bar_text\");\n            text.innerHTML = `${procent}%`;\n        } \n    } \n\n    render() {\n        const {cur_daily_amount, cookie_data} = this.props;\n\n        return (\n            <div className=\"main\">\n                <div id=\"glass\" className=\"glass\"></div>\n                <div id=\"measure\">\n                <div id=\"counter\" onChange={() => this.changeSum()}>\n                    {this.showCurDaily(cur_daily_amount)}/{this.getAmount()} ml\n                </div>\n                    <div className=\"bar\">\n                        <div id=\"main_bar\"></div>\n                        <div id=\"progress_bar\" onChange={this.progressBarFunction(cur_daily_amount, cookie_data)}>\n                            <p id=\"bar_text\">0%</p>\n                        </div> \n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        cur_weight: state.weight,\n        cur_activity: state.activity,\n        cur_sex: state.sex,\n        cur_amount: state.cur_amount,\n        type: state.type,\n        cur_daily_amount: state.cur_daily_amount,\n        sum_daily_amount: state.sum_daily_amount,\n        cookie_data: state.cookie_data\n    }\n}\n\nexport default withCookies(connect(mapStateToProps, actions)(Main));","import Main from './main_field';\nexport default Main;\n\n\n\n","import React, {Component} from \"react\";\nimport {connect} from 'react-redux';\nimport {get_cur_amount} from '../../actions';\nimport './ml_scroll.css';\n\n\nclass Mlscroll extends Component {\n\n    state = {\n        arr: []\n    }\n\n    componentDidMount() {\n        this.generateSlides();\n        const wrap = document.querySelector(\".wrapper\").children;\n        let newArray = [];\n        for (let elem of wrap) {\n            newArray.push(elem);\n            this.setState(() => ({\n                arr: newArray\n            }));\n        }\n        \n    }\n\n    nextSlide = () => {\n        const {arr} = this.state;\n        for(let i = 0; i < arr.length; i++) {\n            if(arr[i].classList.contains(\"active\")) {\n                arr[i].classList.remove(\"active\");\n                arr[i-1].classList.add(\"active\");\n            }\n\n            if(arr[i].classList.contains(\"first\") && arr[i].classList.contains(\"active\")) {\n                arr[i].classList.remove(\"active\");\n                arr[(arr.length -1) - 1].classList.add(\"active\");\n            }\n        }\n    } \n\n    prevSlide = () => {\n        const {arr} = this.state;\n        for(let i = arr.length - 1; i > 0; i--) {\n            if(arr[i].classList.contains(\"active\")) {\n                arr[i].classList.remove(\"active\");\n                arr[i+1].classList.add(\"active\");\n            }\n\n            if(arr[i].classList.contains(\"last\") && arr[i].classList.contains(\"active\")) {\n                arr[i].classList.remove(\"active\");\n                arr[0].classList.add(\"active\");\n            }\n        }\n    }\n \n    generateSlides = () => {\n        const wrapper = document.querySelector(\".wrapper\");\n        for(let i = 40; i < 600; i = i + 10) {\n            let child = document.createElement(\"div\");\n            let text = document.createTextNode(`${i + 10}`);\n            child.appendChild(text);\n            child.classList.add(\"slide\");\n            wrapper.appendChild(child);\n            if(i === 40) {\n                child.classList.add(\"first\");\n            }\n            if(i === 240) {\n                child.classList.add(\"active\");\n            }\n            if(i === 600) {\n                child.classList.add(\"last\"); \n            }\n        }\n    }\n\n    getDaily = () => {\n        const wrap = document.querySelector(\".wrapper\").children;\n        for (let elem of wrap) {\n            if(elem.classList.contains(\"active\")){\n                let data = elem.textContent;\n\n                // update store\n                this.props.get_cur_amount(data); \n            }\n        }\n    }\n\n    render() {\n\n        return (\n            <div className=\"ml_scroll\">\n                <div id=\"up\" onClick={this.nextSlide}>\n                    <div id=\"img1\"></div>\n                </div>\n                <div className=\"wrapper\" onClick={this.getDaily}></div>\n                <div id=\"down\" onClick={this.prevSlide}>\n                    <div id=\"img2\"></div>\n                </div>\n            </div>  \n\n        )\n    }\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        cur_amount: state.cur_amount\n    }\n};\n \nexport default connect(mapStateToProps, {get_cur_amount})(Mlscroll);","import Mlscroll from './ml_scroll';\nexport default Mlscroll;","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport * as actions from '../../actions';\nimport './type_scroll.css';\n\n\nclass Typescroll extends Component {\n\n    state = {\n        array: ['water', 'milk', 'yoghurt', 'coffee', 'alcohol', 'tea', 'juice'],\n        counter: 1 \n    }\n\n    componentDidMount() {\n        this.buildSlider();\n    }\n\n    componentDidUpdate() {\n\n    }\n\n    buildSlider = () => { \n        const slider = document.querySelector(\".slider\");\n        for(let i = 0; i < this.state.array.length; i++) {\n            let child = document.createElement(\"div\");\n            let text = document.createTextNode(`${this.state.array[i]}`);\n            child.append(text);\n            child.classList.add(\"slides\");\n            child.addEventListener('click', () => this.addActive(child));\n            slider.appendChild(child);\n        }\n    }\n\n    addActive = (item) => {\n        item.classList.add(\"slides_clicked\", \"active_type\");\n    }\n\n    checkOneActiveElemExist = (elem) => {\n        for(let kid of elem) {\n            if(!kid.classList.contains(\"active_type\")) {\n                kid.style = \"pointer-events:none;\"; \n            }\n        }\n    }\n\n    getCurType = () => {\n        const slider = document.querySelector(\".slider\").children;\n        for(let slide of slider) {\n            if(slide.classList.contains(\"active_type\")) {\n                let data = slide.textContent; \n\n                // update store\n                this.props.get_type(data);\n            } else {\n                this.checkOneActiveElemExist(slider);\n            }\n        }\n    }\n\n    render() {\n\n        return (\n            <div className=\"type_scroll\">\n                <div className=\"slides_cover\">\n                    <div className=\"slider\" onClick={this.getCurType}></div>\n                </div>\n            </div>  \n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        cur_type: state.type\n    }\n}\n\nexport default connect(mapStateToProps, actions)(Typescroll);\n","import Typescroll from './type_scroll';\nexport default Typescroll;","import Statistics from './stat';\nexport default Statistics;","import React, {Component} from 'react';\nimport Chart from 'react-google-charts';\n\nimport './stat.css';\n\nexport default class Statistics extends Component {\n    \n    setDates = (a) => {\n        let date = new Date();\n        let result;\n        for(let i = 0; i < 5; i ++) {\n            let month = date.getMonth() + 1,\n                day = date.getDate() + i,\n                num = day + \".\" + month;\n            if(i === a) {\n                result = num;\n            }\n        }\n        return result;\n    }\n\n    render() {\n        return(\n            <div className=\"stat\">\n                <Chart\n                    className=\"chart\"\n                    width={'500px'}\n                    heignt={'300px'}\n                    chartType=\"Bar\"\n                    loader={<div>Loading Chart</div>}\n                    data={[\n                        ['date', 'water'],\n                        [`${this.setDates(0)}`, 1.2],\n                        [`${this.setDates(1)}`, 1.5],\n                        [`${this.setDates(2)}`, 1.3],\n                        [`${this.setDates(3)}`, 1.9],\n                        [`${this.setDates(4)}`, 1],\n                    ]}\n                    options={{\n                        vAxis: {\n                            title: 'water',\n                            format: 'numbers',\n                        }\n                    }}\n                    rootProps={{ 'data-testid': '1' }}\n                />\n            </div>\n        )\n    }\n}","import React, {Component} from \"react\";\nimport Main from '../main_field';\nimport Mlscroll from '../ml_scroll';\nimport Typescroll from '../type_scroll';\nimport Statistics from '../statistic';\nimport { withRouter } from \"react-router-dom\";\n\nimport './pages.css';\n\nclass MainPage extends Component {\n    render() {\n        return(\n            <div className=\"appl\">\n                <Main />\n                <Mlscroll/>\n                <Typescroll/>\n                <Statistics/>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(MainPage);","import React, {Component} from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport {CookiesProvider, withCookies} from 'react-cookie';\nimport {WelcomePage, WeightNamePage, MainPage} from '../pages';\n\nimport './app.css';\n\n\nclass App extends Component {\n    render() {\n        return(\n            <CookiesProvider>\n                <Router>\n                    <div className=\"app\">\n                        <Switch>\n                            <Route path=\"/water_app\" exact component={WelcomePage}></Route>\n                            <Route path=\"/second\" render={() => (<WeightNamePage cookies={this.props.cookies}/>)}></Route>\n                            <Route path=\"/main\" render={() => (<MainPage cookies={this.props.cookies}/>)}></Route>\n                        </Switch>\n                    </div>\n                </Router>\n            </CookiesProvider>\n        )\n    }\n}\n\nexport default withCookies(App);","import App from './app';\nexport default App;","const initialState = {\n    weight: 0,\n    activity: 0,\n    sex: \"\",\n    cur_amount: 0,\n    type: \"\",\n    cur_daily_amount: 0,\n    sum_daily_amount: 0,\n    cookie_data: 0\n} \n\nconst reducer = (state = initialState, action) => {\n    switch(action.type) {\n        case 'WEIGHT_TEST' :\n            return {\n                ...state,\n                weight: action.payload\n            };\n        case 'ACTIVITY_TEST' :\n            return {\n                ...state,\n                activity: action.payload\n            };\n        case 'SEX_TEST' :\n            return {\n                ...state,\n                sex: action.payload\n            };\n        case 'CUR_AMOUNT' :\n            return {\n                ...state,\n                cur_amount: action.payload\n            };\n        case 'TYPE' :    \n            return {\n                ...state,\n                type: action.payload \n            };\n        case 'CUR_DAILY_AMOUNT' :\n            return {\n                ...state,\n                cur_daily_amount: action.payload\n            };\n        case 'SUM_DAILY_AMOUNT' :\n            let newSum;\n            return {\n                ...state,\n                newSum: state.sum_daily_amount,\n                sum_daily_amount: (newSum + action.payload)\n            };\n        case 'COOKIE_DATA' :\n            return {\n                ...state,\n                cookie_data: action.payload\n            };\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport reducer from './reducer';\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n ,document.getElementById('root'));\n\n"],"sourceRoot":""}